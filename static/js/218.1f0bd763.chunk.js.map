{"version":3,"file":"static/js/218.1f0bd763.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filterstyled.js","components/Filter/Filter.jsx","components/Contacts/ContactListStyled.js","components/Contacts/ContactList.jsx","components/Container/ContainerStyled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contactsSelectors.js","pages/Contacts.jsx","HOC/withAuthRedirect.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: #d9f3ff;\n  border-radius: 15px;\n`;\nexport const ContactsLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 150px;\n  margin-left: 100px;\n`;\nexport const ContactName = styled.span`\n  margin-top: 10px;\n  margin-bottom: 5px;\n  font-weight: 500;\n  font-size: 18px;\n`;\nexport const ContactNumber = styled.span`\n  margin-top: 10px;\n  margin-bottom: 5px;\n  font-weight: 500;\n  font-size: 18px;\n`;\nexport const ContactInput = styled.input`\n  height: 20px;\n  width: 200px;\n  border: 1px solid black;\n  border-radius: 6px;\n  padding: 4px 6px;\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    border: 1px solid #324a98;\n    transition: 250ms;\n  }\n`;\nexport const AddBtn = styled.button`\n  margin-left: 125px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  max-width: 150px;\n  padding: 5px 10px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 2px solid #005c84bd;\n  background-color: #ddeefd;\n  font-size: 15px;\n  font-weight: 700;\n  color: #01155b;\n  transition: 250ms;\n  &:hover,\n  &:focus {\n    background-color: #0051ab;\n    color: white;\n    transition: 250ms;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport {\n  ContactsForm,\n  ContactsLabel,\n  ContactName,\n  ContactNumber,\n  ContactInput,\n  AddBtn,\n} from './ContactFormStyled';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nexport default function ContactForm({ onAddContact }) {\n  const [formData, setFormData] = useState(INITIAL_STATE);\n\n  const onInputChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contactData = {\n      name: formData.name,\n      number: formData.number,\n    };\n    onAddContact(contactData);\n    setFormData(INITIAL_STATE);\n  };\n\n  return (\n    <ContactsForm onSubmit={handleSubmit}>\n      <ContactsLabel>\n        <ContactName>Name</ContactName>\n        <ContactInput\n          value={formData.name}\n          onChange={onInputChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([\\\\' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContactsLabel>\n      <ContactsLabel>\n        <ContactNumber>Number</ContactNumber>\n        <ContactInput\n          value={formData.number}\n          onChange={onInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\\\+?\\\\d{1,4}?[-\\\\.\\\\s]?\\\\(\\\\d{1,3}\\\\)?[-\\\\.\\\\s]?\\\\d{1,4}[-\\\\.\\\\s]?\\\\d{1,4}[-\\\\.\\\\s]?\\\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactsLabel>\n      <AddBtn type=\"submit\">Add contact</AddBtn>\n    </ContactsForm>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FilterSection = styled.section``;\nexport const FilterTitle = styled.h3`\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\nexport const FilterInput = styled.input`\n  height: 20px;\n  width: 200px;\n  border: 1px solid black;\n  border-radius: 6px;\n  padding: 4px 6px;\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    border: 1px solid #324a98;\n    transition: 250ms;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FilterSection, FilterInput, FilterTitle } from './Filterstyled';\n\nconst Filter = ({ title, filter, onFilter }) => {\n  const handleInputChange = e => {\n    onFilter(e.target.value);\n  };\n  return (\n    <FilterSection>\n      <FilterTitle>{title}</FilterTitle>\n      <FilterInput\n        onChange={handleInputChange}\n        value={filter}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </FilterSection>\n  );\n};\nexport default Filter;\n\nFilter.propTypes = {\n  title: PropTypes.string.isRequired,\n  filter: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  background-color: #e6e6e6;\n  border-radius: 15px;\n  padding: 20px;\n  padding-bottom: 10px;\n`;\nexport const ContactsItems = styled.li`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  align-items: center;\n`;\nexport const ContactInfo = styled.p`\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-weight: 500;\n  flex-grow: 1;\n`;\nexport const DeleteBtn = styled.button`\n  padding: 5px 10px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 2px solid #710101ba;\n  background-color: #fce3e3;\n  font-size: 15px;\n  font-weight: 700;\n  color: #450000;\n  transition: 250ms;\n  &:hover,\n  &:focus {\n    background-color: #7c0000;\n    color: white;\n    transition: 250ms;\n  }\n  margin-left: 15px;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ContactsList,\n  ContactsItems,\n  ContactInfo,\n  DeleteBtn,\n} from './ContactListStyled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ContactsList>\n      {contacts.map(({ id, number, name }) => {\n        return (\n          <ContactsItems key={id}>\n            <ContactInfo>\n              {name}: {number}\n            </ContactInfo>\n            <DeleteBtn\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </DeleteBtn>\n          </ContactsItems>\n        );\n      })}\n    </ContactsList>\n  );\n};\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 100px;\n  left: 450px;\n  min-width: 400px;\n  margin-top: 25px;\n  margin-bottom: 25px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const PhonebookTitle = styled.h1`\n  text-align: center;\n  margin-bottom: 10px;\n`;\nexport const ContactsTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 0;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n","import { useEffect } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport ContactList from 'components/Contacts/ContactList';\nimport {\n  Container,\n  PhonebookTitle,\n  ContactsTitle,\n} from 'components/Container/ContainerStyled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContactThunk,\n  deleteContactThunk,\n  fetchContactsThunk,\n} from 'redux/contacts/contactsOperations';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { selectUserData } from 'redux/auth/userSelectors';\nimport withAuthRedirect from 'HOC/withAuthRedirect';\n\nconst Contacts = () => {\n  const userData = useSelector(selectUserData);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!userData) return;\n\n    dispatch(fetchContactsThunk());\n  }, [dispatch, userData]);\n\n  const onAddContact = contactData => {\n    const { name } = contactData;\n    const checkName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (checkName) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContactThunk(contactData));\n    }\n  };\n  const onFilter = filterContacts => {\n    dispatch(setFilter(filterContacts));\n  };\n  const onDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <Container>\n      <PhonebookTitle>Phonebook</PhonebookTitle>\n      <ContactForm onAddContact={onAddContact} />\n      <ContactsTitle>Contacts</ContactsTitle>\n      {isLoading && <Loader />}\n      {error && <div>Error: {error}</div>}\n      <Filter\n        filter={filter}\n        onFilter={onFilter}\n        title=\"Find contacts by name\"\n      />\n      <ContactList\n        contacts={filteredContacts}\n        onDeleteContact={onDeleteContact}\n      />\n    </Container>\n  );\n};\nexport default withAuthRedirect(Contacts);\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectUserData } from 'redux/auth/userSelectors';\n\nconst withAuthRedirect = SomeComponent => {\n  const PrivateComponent = props => {\n    const userData = useSelector(selectUserData);\n\n    return userData ? (\n      <SomeComponent {...props} />\n    ) : (\n      <Navigate replace={true} to={'/login'} />\n    );\n  };\n\n  return PrivateComponent;\n};\n\nexport default withAuthRedirect;\n"],"names":["ContactsForm","styled","_templateObject","_taggedTemplateLiteral","ContactsLabel","_templateObject2","ContactName","_templateObject3","ContactNumber","_templateObject4","ContactInput","_templateObject5","AddBtn","_templateObject6","INITIAL_STATE","name","number","ContactForm","_ref","onAddContact","_useState","useState","_useState2","_slicedToArray","formData","setFormData","onInputChange","e","value","target","_objectSpread","_defineProperty","_jsxs","onSubmit","preventDefault","contactData","children","_jsx","onChange","type","pattern","title","required","FilterSection","FilterTitle","FilterInput","filter","onFilter","ContactsList","ContactsItems","ContactInfo","DeleteBtn","contacts","onDeleteContact","map","_ref2","id","onClick","Container","PhonebookTitle","ContactsTitle","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","items","selectFilter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","contact","toLowerCase","includes","trim","SomeComponent","props","useSelector","selectUserData","Navigate","replace","to","userData","dispatch","useDispatch","useEffect","fetchContactsThunk","filteredContacts","some","alert","addContactThunk","Loader","Filter","filterContacts","setFilter","ContactList","contactId","deleteContactThunk"],"sourceRoot":""}